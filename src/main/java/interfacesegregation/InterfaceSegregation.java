package interfacesegregation;

/**
 * 4 принцип гласит: лучше создавать много отдельных узкоспециализированных интерфейсов,чем один,
 * который включает в себя много функций
 *
 * interface ItemClick {
 *     void onClick()
 *     void onLongClick()
 * }
 *
 * Итак, есть интерфейс, который требует реализовать два метода: короткое нажатие и длинное нажатие.
 * Но что, если нам необходимо только короткое нажатие? В этом случае у нас будет, что-то такое:
 *
 * class MyClass implements ItemClick {
 *     void onClick() {
 *         // тут реализуем необходимую логику
 *     }
 *     void onLongClick() {
 *         // а вот тут нам нечего не надо делать, но все равно приходится
 *         // реализовать этот метод потому, что этого требует интерфейс
 *     }
 * }
 *
 *
 * Что-бы этого избежать необходимо сделать два разных интерфейса, которые можно применять по отдельности.
 */
interface ItemClick {
    void onClick();
}
interface ItemLongClick {
    void onLongClick();
}
